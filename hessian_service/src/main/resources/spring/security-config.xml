<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd
       ">
    <!-- 认证的入口 -->
    <bean id="casEntryPoint"
          class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <!-- Cas Server的登录地址 -->
        <property name="loginUrl" value="https://master:8443/cas/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>

    <security:http auto-config="true" entry-point-ref="casEntryPoint">
        <!-- 表示匿名用户可以访问 -->
        <security:intercept-url pattern="/index.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/**" access="ROLE_USER"/>
        <!-- 退出登录时删除session对应的cookie -->
        <security:logout delete-cookies="JSESSIONID"/>
        <!-- SingleSignOutFilter放在CAS_FILTER之前 -->
        <security:custom-filter ref="casLogoutFilter" before="CAS_FILTER"/>
        <security:custom-filter ref="casFilter" position="CAS_FILTER"/>
    </security:http>

    <bean id="casFilter"
          class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <!-- 指定处理地址，不指定时默认将会是“/j_spring_cas_security_check” -->
        <property name="filterProcessesUrl" value="/j_spring_cas_security_check"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="casAuthenticationProvider"
          class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <!-- 通过username来加载UserDetails -->
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <!-- 真正加载UserDetails的UserDetailsService实现 -->
                <constructor-arg ref="userDetailsService"/>
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties"/>
        <!-- 配置TicketValidator在登录认证成功后验证ticket -->
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <!-- Cas Server访问地址的前缀，即根路径-->
                <constructor-arg index="0" value="https://master:8443/cas"/>
            </bean>
        </property>
        <property name="key" value="an_id_for_this_auth_provider_only"/>
    </bean>

    <!-- 指定service相关信息 -->
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <!-- Cas Server认证成功后的跳转地址，这里要跳转到我们的Spring Security应用，
        之后会由CasAuthenticationFilter处理，默认处理地址为/j_spring_cas_security_check -->
        <property name="service" value="http://localhost:8081/hessian_service/j_spring_cas_security_check"/>
        <property name="sendRenew" value="false"/>
    </bean>

    <!--配置单点登出-->
    <bean id="casLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>

    <bean id="userDetailsService"
          class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="rolePrefix" value="ROLE_"/>
        <property name="usersByUsernameQuery" value="select username, password, enabled from users where username=?"/>
        <property name="authoritiesByUsernameQuery"
                  value="select username, authority from authorities where username=?"/>
    </bean>

</beans>
