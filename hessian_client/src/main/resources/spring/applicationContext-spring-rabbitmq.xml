<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">


    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="192.168.20.3" username="admin"
                               password="admin" port="5672" channel-cache-size="10"/>

    <!--<rabbit:connection-factory id="connectionFactory" host="192.168.7.79" username="guest"-->
    <!--password="guest" port="5672" channel-cache-size="10"/>-->

    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>

    <!--spring rabbitmq  topic-exchange start-->
    <!-- spring template声明-->
    <rabbit:template exchange="topicExchange" id="topicaAmqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>

    <rabbit:queue name="queue1"/>
    <rabbit:queue name="queue2"/>
    <!-- exchagne type is topic -->
    <rabbit:topic-exchange name="topicExchange">
        <rabbit:bindings>
            <!-- sender: routing-key  receiver:binding-key -->
            <rabbit:binding queue="queue1" pattern="#.key.#"/>
            <rabbit:binding queue="queue2" pattern="*.key"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener ref="queueListenter" queue-names="queue1"/>
        <rabbit:listener ref="queueListenter2" queue-names="queue2"/>
        <rabbit:listener ref="fanoutListenter1" queue-names="fanoutQueue1"/>
        <rabbit:listener ref="fanoutListenter2" queue-names="fanoutQueue2"/>
    </rabbit:listener-container>
    <!--spring rabbitmq  topic-exchange start-->

    <!--spring rabbitmq direct-exchange start-->
    <!-- spring  direct-exchange template声明 -->
    <rabbit:template id="directAmqpTemplate" exchange="spring.queue.exchange" routing-key="spring.queue.tag.key"
                     connection-factory="connectionFactory" message-converter="jsonMessageConverter"/>

    <!-- queue 队列声明 -->
    <rabbit:queue durable="true"
                  auto-delete="false" exclusive="false" name="spring.queue.tag"/>

    <!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="spring.queue.exchange"
                            durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="spring.queue.tag" key="spring.queue.tag.key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <!--queues：监听的队列，多个的话用逗号（,）分隔-->
        <rabbit:listener ref="direcExchangListenter" queue-names="spring.queue.tag"/>
    </rabbit:listener-container>
    <!--spring rabbitmq direct-exchange end-->

    <!-- sdkserver direct-exchange  start-->
    <!-- spring template声明-->
    <rabbit:template exchange="mq-exchange" id="sdkAmqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>

    <!-- 申明队列名 -->
    <rabbit:queue id="sdk_pay_trans_queue_key" name="sdk_pay_trans_queue_key" durable="true" auto-delete="false"
                  exclusive="false"/>

    <rabbit:direct-exchange name="mq-exchange" durable="true" auto-delete="false" id="mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="sdk_pay_trans_queue_key" key="sdk_pay_trans_queue_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- 监听队列-->

    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="sdk_pay_trans_queue_key" ref="sdkPayTransListener"/>
    </rabbit:listener-container>
    <!-- sdkserver direct-exchange  end -->

    <!-- 延迟消息start -->
    <rabbit:topic-exchange name="delay_exchange" delayed="true">
        <rabbit:bindings>
            <rabbit:binding queue="delay_queue" pattern="order.delay.notify" />
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <rabbit:queue name="delay_queue" durable="true" auto-declare="true" auto-delete="false" />

    <rabbit:template id="delayMsgTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter" exchange="delay_exchange" />

    <rabbit:listener-container connection-factory="connectionFactory" channel-transacted="false" acknowledge="auto" message-converter="jsonMessageConverter">
        <rabbit:listener queues="delay_queue" ref="DelayHandleConsumer" method="delayHandle" />
    </rabbit:listener-container>
    <!-- 延迟消息end -->
    <bean id="DelayHandleConsumer" class="com.lv.rabbitmq.comsumer.DelayHandleConsumer"/>


    <rabbit:queue name="fanoutQueue1" durable="true" auto-delete="false"  exclusive="false"/>
    <rabbit:queue name="fanoutQueue2" durable="true" auto-delete="false"  exclusive="false"/>

    <rabbit:template exchange="testfanout" id="fanoutAmqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>

    <rabbit:fanout-exchange name="testfanout" durable="true"  auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="fanoutQueue1"/>
            <rabbit:binding queue="fanoutQueue2"/> 
        </rabbit:bindings>
    </rabbit:fanout-exchange>

</beans>